// Prisma schema for API
// Generator and datasource

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Models
model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String?
  bio       String?
  avatarUrl String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  posts     BlogPost[]
  projects  Project[]
}

model Tag {
  id        String      @id @default(cuid())
  slug      String      @unique
  label     String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  posts     BlogPostTag[]
  projects  ProjectTag[]
}

model BlogPost {
  id          String        @id @default(cuid())
  slug        String        @unique
  title       String
  excerpt     String?
  content     String        // Markdown/MDX content
  coverImage  String?
  published   Boolean       @default(false)
  publishedAt DateTime?
  authorId    String
  author      User          @relation(fields: [authorId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  tags        BlogPostTag[]
}

model Project {
  id          String       @id @default(cuid())
  slug        String       @unique
  title       String
  description String?
  url         String?
  repoUrl     String?
  imageUrl    String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  authorId    String
  author      User         @relation(fields: [authorId], references: [id])
  tags        ProjectTag[]
}

// Join tables for many-to-many with extra flexibility
model BlogPostTag {
  blogPost   BlogPost @relation(fields: [blogPostId], references: [id])
  blogPostId String
  tag        Tag      @relation(fields: [tagId], references: [id])
  tagId      String

  @@id([blogPostId, tagId])
}

model ProjectTag {
  project   Project @relation(fields: [projectId], references: [id])
  projectId String
  tag       Tag     @relation(fields: [tagId], references: [id])
  tagId     String

  @@id([projectId, tagId])
}
